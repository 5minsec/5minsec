"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[752],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=a.createContext({}),p=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=p(e.components);return a.createElement(o.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(t),m=r,g=d["".concat(o,".").concat(m)]||d[m]||c[m]||s;return t?a.createElement(g,l(l({ref:n},u),{},{components:t})):a.createElement(g,l({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,l=new Array(s);l[0]=d;var i={};for(var o in n)hasOwnProperty.call(n,o)&&(i[o]=n[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<s;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6206:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return o},metadata:function(){return p},toc:function(){return u},default:function(){return d}});var a=t(7462),r=t(3366),s=(t(7294),t(3905)),l=["components"],i={sidebar_position:1},o="Kubernetes",p={unversionedId:"cheat-sheets/kubernetes",id:"cheat-sheets/kubernetes",title:"Kubernetes",description:"Resources",source:"@site/docs/cheat-sheets/kubernetes.md",sourceDirName:"cheat-sheets",slug:"/cheat-sheets/kubernetes",permalink:"/site/docs/cheat-sheets/kubernetes",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cheat-sheets/kubernetes.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Log4j",permalink:"/site/docs/vulns/log4j"}},u=[{value:"Resources",id:"resources",children:[],level:2},{value:"kubectl and minikube",id:"kubectl-and-minikube",children:[{value:"Commands",id:"commands",children:[],level:3}],level:2},{value:"Configuration Files Samples",id:"configuration-files-samples",children:[{value:"Deployment",id:"deployment",children:[],level:3},{value:"Service",id:"service",children:[],level:3}],level:2}],c={toc:u};function d(e){var n=e.components,t=(0,r.Z)(e,l);return(0,s.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"kubernetes"},"Kubernetes"),(0,s.kt)("h2",{id:"resources"},"Resources"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=X48VuDVv0do"},"Kubernetes Tutorial for Beginners [FULL COURSE in 4 Hours] | TechWorld with Nana")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/reference/kubectl/cheatsheet/"},"kubectl Cheat Sheet"))),(0,s.kt)("h2",{id:"kubectl-and-minikube"},"kubectl and minikube"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Kubectl: ",(0,s.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/tasks/tools/"},"https://kubernetes.io/docs/tasks/tools/")),(0,s.kt)("li",{parentName:"ul"},"Minikube: ",(0,s.kt)("a",{parentName:"li",href:"https://minikube.sigs.k8s.io/docs/"},"https://minikube.sigs.k8s.io/docs/")),(0,s.kt)("li",{parentName:"ul"},"Kubectx/Kubens: ",(0,s.kt)("a",{parentName:"li",href:"https://github.com/ahmetb/kubectx"},"https://github.com/ahmetb/kubectx")),(0,s.kt)("li",{parentName:"ul"},"Kubernetes Dashboard: ",(0,s.kt)("a",{parentName:"li",href:"https://github.com/kubernetes/dashboard"},"https://github.com/kubernetes/dashboard")),(0,s.kt)("li",{parentName:"ul"},"Helm: ",(0,s.kt)("a",{parentName:"li",href:"https://helm.sh/"},"https://helm.sh/"))),(0,s.kt)("h3",{id:"commands"},"Commands"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# get nodes\nkubectl get nodes\n\n# output\nNAME       STATUS   ROLES                  AGE   VERSION\nminikube   Ready    control-plane,master   56s   v1.22.3\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# minikube status\nminikube status\n\n# output\nminikube\ntype: Control Plane\nhost: Running\nkubelet: Running\napiserver: Running\nkubeconfig: Configured\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# create an nginx deployment\nkubectl create deployment nginx-depl --image=nginx\n\n# output\ndeployment.apps/nginx-depl created\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# list deployments\nkubectl get deployment\n\n# output\nNAME         READY   UP-TO-DATE   AVAILABLE   AGE\nnginx-depl   1/1     1            1           102s\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# get pods\nkubectl get pod\n\n# output\nNAME                          READY   STATUS    RESTARTS   AGE\nnginx-depl-5c8bf76b5b-95vpw   1/1     Running   0          2m41s\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# get replicaset\nkubectl get replicaset\n\n# output\nNAME                    DESIRED   CURRENT   READY   AGE\nnginx-depl-5c8bf76b5b   1         1         1       4m15s\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# edit a deployment\nkubectl edit deployment nginx-depl\n\n# output\n# > text editor for the deployment\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# get logs\nkubectl logs nginx-depl-7fc44fc5d4-45h68\n\n# output\n# > pod container logs\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# get terminal inside a pod container\nkubectl exec -it nginx-depl-7fc44fc5d4-45h68 -- bin/bash\n\n# output\nroot@nginx-depl-7fc44fc5d4-45h68:/#\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'# delete deployment\nkubectl delete deployment nginx-depl\n\n# output\ndeployment.apps "nginx-depl" deleted\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# apply config file\nkubectl apply -f nginx-deployment.yaml\n\n# output\ndeployment.apps/nginx-deployment created\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'# delete all\nkubectl delete all --all --all-namespaces\n\n# output\npod "coredns-78fcd69978-rv4jb" deleted\npod "etcd-minikube" deleted\npod "kube-apiserver-minikube" deleted\npod "kube-controller-manager-minikube" deleted\npod "kube-proxy-hpzz4" deleted\npod "kube-scheduler-minikube" deleted\npod "storage-provisioner" deleted\nservice "kubernetes" deleted\nservice "kube-dns" deleted\ndaemonset.apps "kube-proxy" deleted\ndeployment.apps "coredns" deleted\nreplicaset.apps "coredns-78fcd69978" deleted\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'# stop local cluster\nminikube stop\n\n# output\n\u270b  Stopping node "minikube"  ...\n\ud83d\uded1  1 node stopped.\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'# deletes a local Kubernetes cluster\n# deletes a local Kubernetes cluster. This command deletes the VM, and removes all associated files.\n# https://minikube.sigs.k8s.io/docs/commands/delete/\nminikube delete --all --purge\n\n# output\n\ud83d\udd25  Deleting "minikube" in virtualbox ...\n\ud83d\udc80  Removed all traces of the "minikube" cluster.\n\ud83d\udd25  Successfully deleted all profiles\n\ud83d\udc80  Successfully purged minikube directory located at - [/Users/ben-hurott/.minikube]\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'# get deployment status as yaml\nkubectl get deployment nginx-deployment -o yaml\n\n# output\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: "2"\n    kubectl.kubernetes.io/last-applied-configuration: |\n      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"nginx"},"name":"nginx-deployment","namespace":"default"},"spec":{"replicas":2,"selector":{"matchLabels":{"app":"nginx"}},"template":{"metadata":{"labels":{"app":"nginx"}},"spec":{"containers":[{"image":"nginx:1.16","name":"nginx","ports":[{"containerPort":8080}]}]}}}}\n  creationTimestamp: "2022-01-07T20:32:16Z"\n  generation: 3\n  labels:\n    app: nginx\n  name: nginx-deployment\n  namespace: default\n  resourceVersion: "732"\n  uid: 68ce242a-040f-4480-891c-f8239138d761\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: nginx\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - image: nginx:1.16\n        imagePullPolicy: IfNotPresent\n        name: nginx\n        ports:\n        - containerPort: 8080\n          protocol: TCP\n        resources: {}\n        terminationMessagePath: /dev/termination-log\n        terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n  - lastTransitionTime: "2022-01-07T20:32:16Z"\n    lastUpdateTime: "2022-01-07T20:33:49Z"\n    message: ReplicaSet "nginx-deployment-f4b7bbcbc" has successfully progressed.\n    reason: NewReplicaSetAvailable\n    status: "True"\n    type: Progressing\n  - lastTransitionTime: "2022-01-07T20:35:55Z"\n    lastUpdateTime: "2022-01-07T20:35:55Z"\n    message: Deployment has minimum availability.\n    reason: MinimumReplicasAvailable\n    status: "True"\n    type: Available\n  observedGeneration: 3\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# open LoadBalancer service in browser\nminikube service mongo-express-service\n\n# output\n|-----------|-----------------------|-------------|-----------------------------|\n| NAMESPACE |         NAME          | TARGET PORT |             URL             |\n|-----------|-----------------------|-------------|-----------------------------|\n| default   | mongo-express-service |        8081 | http://192.168.59.101:30000 |\n|-----------|-----------------------|-------------|-----------------------------|\n\ud83c\udf89  Opening service default/mongo-express-service in default browser...\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# enable ingress in minikube\nminikube addons enable ingress\n\n# output\n\u279c minikube addons enable ingress\n    \u25aa Using image k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1\n    \u25aa Using image k8s.gcr.io/ingress-nginx/controller:v1.0.4\n    \u25aa Using image k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1\n\ud83d\udd0e  Verifying ingress addon...\n\ud83c\udf1f  The 'ingress' addon is enabled\n")),(0,s.kt)("h2",{id:"configuration-files-samples"},"Configuration Files Samples"),(0,s.kt)("h3",{id:"deployment"},"Deployment"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec: # spec for deployment\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec: # spec for a pod\n      containers:\n      - name: nginx\n        image: nginx:1.16\n        ports:\n        - containerPort: 80\n")),(0,s.kt)("h3",{id:"service"},"Service"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-service\nspec:\n  selector:\n    app: nginx\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 8080\n")))}d.isMDXComponent=!0}}]);