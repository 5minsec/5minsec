"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[388],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return b}});var r=n(7294);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,c=function(e,t){if(null==e)return{};var n,r,c={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,c=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),f=u(n),b=c,d=f["".concat(s,".").concat(b)]||f[b]||l[b]||o;return n?r.createElement(d,a(a({ref:t},p),{},{components:n})):r.createElement(d,a({ref:t},p))}));function b(e,t){var n=arguments,c=t&&t.mdxType;if("string"==typeof e||c){var o=n.length,a=new Array(o);a[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:c,a[1]=i;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},4873:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return p},default:function(){return f}});var r=n(7462),c=n(3366),o=(n(7294),n(3905)),a=["components"],i={sidebar_position:2},s="S3 Bucket",u={unversionedId:"tools/s3-bucket",id:"tools/s3-bucket",title:"S3 Bucket",description:"Scripts and tips for securing S3 Buckets",source:"@site/docs/tools/s3-bucket.md",sourceDirName:"tools",slug:"/tools/s3-bucket",permalink:"/site/docs/tools/s3-bucket",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tools/s3-bucket.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"grep",permalink:"/site/docs/tools/grep"},next:{title:"Create a Page",permalink:"/site/docs/tutorial-basics/create-a-page"}},p=[{value:"Checking for public access",id:"checking-for-public-access",children:[],level:3}],l={toc:p};function f(e){var t=e.components,n=(0,c.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"s3-bucket"},"S3 Bucket"),(0,o.kt)("p",null,"Scripts and tips for securing S3 Buckets"),(0,o.kt)("h3",{id:"checking-for-public-access"},"Checking for public access"),(0,o.kt)("p",null,"SETUP"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# require python 3.7+\npip install boto3\npython3 s3-bucket.py https://web-faventia.s3-eu-west-1.amazonaws.com\ntouch hacked.txt # just create file for upload test\n")),(0,o.kt)("p",null,"SCRIPT"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import boto3\nfrom botocore import UNSIGNED\nfrom botocore.client import Config\nimport sys\nimport os\n\nBUCKET_URL = sys.argv[1]\nBUCKET_NAME = BUCKET_URL.split("//")[1].split(".")[0]\n\nprint(f"Checking bucket {BUCKET_NAME} ({BUCKET_URL})")\n\ns3 = boto3.resource(\'s3\', config=Config(signature_version=UNSIGNED))\ns3_client = boto3.client(\'s3\', config=Config(signature_version=UNSIGNED))\nbucket = s3.Bucket(BUCKET_NAME)\n\n\ndef get_info():\n    try:\n        bucket_acl = s3_client.get_bucket_acl(Bucket=BUCKET_NAME)\n        print(f\'[*] Bucket ACL: {bucket_acl}\')\n    except Exception as err:\n        print(f\'[-] Error get_info: {err}\')\n\n\ndef check_for_public_read():\n    try:\n        is_public_for_read = False\n        for obj in bucket.objects.all():\n            print(f\'[+] Bucket has files (ex: {obj.key})\')\n            is_public_for_read = True\n            break\n            \n        if is_public_for_read:\n            print("[+] Bucket has public listing")\n        else:\n            print("[-] Bucket as no public listing")\n    except Exception as err:\n        print("[-] Bucket as no public listing")\n        print(f"[-] Error: {err}")\n\n\ndef check_for_public_write():\n    hack_file_path = f"{os.path.dirname(os.path.abspath(__file__))}/hacked.txt"\n    with open(hack_file_path, "rb") as f:\n        try:\n            hack_object_name = "b424fa4f-95d3-4375-bf91-b78e4173b0f1.txt"\n            s3_client.upload_fileobj(f, BUCKET_NAME, hack_object_name)\n            print(\'[+] Bucket is public for write\')\n            print(f\'[+] File {hack_object_name} uploaded: {BUCKET_URL}/{hack_object_name}\')\n        except Exception as err:\n            print(\'[-] Bucket is not public for write\')\n            print(f\'[-] Error: {err}\')\n\nget_info()\ncheck_for_public_read()\ncheck_for_public_write()\n')),(0,o.kt)("p",null,"Sample Output"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Checking bucket web-faventia (https://web-faventia.s3-eu-west-1.amazonaws.com)\n[*] Bucket ACL: {'ResponseMetadata': {'RequestId': 'AENWYCP0N4ZWB56C', 'HostId': 'FA2tehnugxbx7w+OqudMO/m9foSKW+ch/H8SfzBq9AGL6mcSKZQ58fVKjyj5qYqIS0J0i/aIqLE=', 'HTTPStatusCode': 200, 'HTTPHeaders': {'x-amz-id-2': 'FA2tehnugxbx7w+OqudMO/m9foSKW+ch/H8SfzBq9AGL6mcSKZQ58fVKjyj5qYqIS0J0i/aIqLE=', 'x-amz-request-id': 'AENWYCP0N4ZWB56C', 'date': 'Mon, 08 Nov 2021 18:00:49 GMT', 'content-type': 'application/xml', 'transfer-encoding': 'chunked', 'server': 'AmazonS3'}, 'RetryAttempts': 0}, 'Owner': {'DisplayName': 'gaddpipe', 'ID': '93c55c0240f4fc023c5635c69f8c48026940490f398ada43dd932492b8e6a94d'}, 'Grants': [{'Grantee': {'Type': 'Group', 'URI': 'http://acs.amazonaws.com/groups/global/AllUsers'}, 'Permission': 'FULL_CONTROL'}]}\n[+] Bucket has files (ex: 208b605c01bc1fd2b9ad92a96f77a169a84643cdeb82a9e64204e23f501afa17371012ec4c2928fda5477f19eaecf9ff449e2accaef00c2d842bf9654e48a232.txt)\n[+] Bucket has public listing\n[+] Bucket is public for write\n[+] File b424fa4f-95d3-4375-bf91-b78e4173b0f1.txt uploaded: https://web-faventia.s3-eu-west-1.amazonaws.com/b424fa4f-95d3-4375-bf91-b78e4173b0f1.txt\n")))}f.isMDXComponent=!0}}]);